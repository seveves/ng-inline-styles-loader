var actual = `
/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n';
import * as import10 from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';
import * as import11 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select';
import * as import12 from './datepicker-navigation-select.ngfactory';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from '@angular/core/src/security';
import * as import15 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/common/src/directives/ng_if';
export class Wrapper_NgbDatepickerNavigation {
  /*private*/ _eventHandler:Function;
  context:import0.NgbDatepickerNavigation;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  subscription0:any;
  subscription1:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.NgbDatepickerNavigation(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_date(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.date = currValue;
      this._expr_0 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_1 = currValue;
    }
  }
  check_maxDate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.maxDate = currValue;
      this._expr_2 = currValue;
    }
  }
  check_minDate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.minDate = currValue;
      this._expr_3 = currValue;
    }
  }
  check_months(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.months = currValue;
      this._expr_4 = currValue;
    }
  }
  check_showSelect(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.showSelect = currValue;
      this._expr_5 = currValue;
    }
  }
  check_showWeekNumbers(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.showWeekNumbers = currValue;
      this._expr_6 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_7:boolean = !this.context.showSelect;
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementClass(el,'collapsed',currVal_7);
      this._expr_7 = currVal_7;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.navigate.subscribe(_eventHandler.bind(view,'navigate'))); }
    if (emit1) { (this.subscription1 = this.context.select.subscribe(_eventHandler.bind(view,'select'))); }
  }
}
var renderType_NgbDatepickerNavigation_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_NgbDatepickerNavigation_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.NgbDatepickerNavigation>;
  _NgbDatepickerNavigation_0_3:Wrapper_NgbDatepickerNavigation;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NgbDatepickerNavigation_Host0,renderType_NgbDatepickerNavigation_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ngb-datepicker-navigation',new import3.InlineArray2(2,'class','d-flex justify-content-between'),rootSelector,(null as any));
    this.compView_0 = new View_NgbDatepickerNavigation0(this.viewUtils,this,0,this._el_0);
    this._NgbDatepickerNavigation_0_3 = new Wrapper_NgbDatepickerNavigation(this.injectorGet(import9.NgbDatepickerI18n,this.parentIndex),this.injectorGet(import10.NgbCalendar,this.parentIndex));
    this.compView_0.create(this._NgbDatepickerNavigation_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._NgbDatepickerNavigation_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.NgbDatepickerNavigation) && (0 === requestNodeIndex))) { return this._NgbDatepickerNavigation_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._NgbDatepickerNavigation_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgbDatepickerNavigation_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._NgbDatepickerNavigation_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const NgbDatepickerNavigationNgFactory:import8.ComponentFactory<import0.NgbDatepickerNavigation> = new import8.ComponentFactory<import0.NgbDatepickerNavigation>('ngb-datepicker-navigation',View_NgbDatepickerNavigation_Host0,import0.NgbDatepickerNavigation);
const styles_NgbDatepickerNavigation:any[] = ['[_nghost-%COMP%] {\n      height: 2rem;\n      line-height: 1.85rem;\n    }\n    .collapsed[_nghost-%COMP%] {\n      margin-bottom: -2rem;        \n    }\n    .ngb-dp-navigation-chevron[_ngcontent-%COMP%]::before {\n      border-style: solid;\n      border-width: 0.2em 0.2em 0 0;\n      content: \'\';\n      display: inline-block;\n      height: 0.75em;\n      transform: rotate(-135deg);\n      -webkit-transform: rotate(-135deg);\n      -ms-transform: rotate(-135deg);\n      width: 0.75em;\n      margin: 0 0 0 0.5rem;\n    }    \n    .ngb-dp-navigation-chevron.right[_ngcontent-%COMP%]:before {\n      -webkit-transform: rotate(45deg);\n      -ms-transform: rotate(45deg);\n      transform: rotate(45deg);\n      margin: 0 0.5rem 0 0;\n    }\n    .btn-link[_ngcontent-%COMP%] {\n      cursor: pointer;\n      outline: 0;\n    }\n    .btn-link[disabled][_ngcontent-%COMP%] {\n      cursor: not-allowed;\n      opacity: .65;\n    }'];
class View_NgbDatepickerNavigation1 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import11.NgbDatepickerNavigationSelect>;
  _NgbDatepickerNavigationSelect_0_3:import12.Wrapper_NgbDatepickerNavigationSelect;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_NgbDatepickerNavigation1,renderType_NgbDatepickerNavigation,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'ngb-datepicker-navigation-select',new import3.InlineArray2(2,'class','d-block'),(null as any));
    this.compView_0 = new import12.View_NgbDatepickerNavigationSelect0(this.viewUtils,this,0,this._el_0);
    this._NgbDatepickerNavigationSelect_0_3 = new import12.Wrapper_NgbDatepickerNavigationSelect(this.parentView.injectorGet(import9.NgbDatepickerI18n,this.parentIndex),this.parentView.injectorGet(import10.NgbCalendar,this.parentIndex));
    this._text_1 = this.renderer.createText((null as any),'\n    ',(null as any));
    this.compView_0.create(this._NgbDatepickerNavigationSelect_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'select',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgbDatepickerNavigationSelect_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.NgbDatepickerNavigationSelect) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgbDatepickerNavigationSelect_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.date;
    this._NgbDatepickerNavigationSelect_0_3.check_date(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.context.disabled;
    this._NgbDatepickerNavigationSelect_0_3.check_disabled(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.maxDate;
    this._NgbDatepickerNavigationSelect_0_3.check_maxDate(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.minDate;
    this._NgbDatepickerNavigationSelect_0_3.check_minDate(currVal_0_0_3,throwOnChange,false);
    this._NgbDatepickerNavigationSelect_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = (this.parentView.context.months * 9);
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementStyle(this._el_0,'width',((this.viewUtils.sanitizer.sanitize(import14.SecurityContext.STYLE,currVal_4) == null)? (null as any): (this.viewUtils.sanitizer.sanitize(import14.SecurityContext.STYLE,currVal_4).toString() + 'rem')));
      this._expr_4 = currVal_4;
    }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._NgbDatepickerNavigationSelect_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'select')) {
      const pd_sub_0:any = ((<any>this.parentView.context.selectDate($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_NgbDatepickerNavigation:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_NgbDatepickerNavigation,{});
export class View_NgbDatepickerNavigation0 extends import2.AppView<import0.NgbDatepickerNavigation> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import13.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import15.Wrapper_NgIf;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _text_12:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NgbDatepickerNavigation0,renderType_NgbDatepickerNavigation,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_16 = import1.UNINITIALIZED;
    this._expr_17 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','btn-link','type','button'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'span',new import3.InlineArray2(2,'class','ngb-dp-navigation-chevron'),(null as any));
    this._text_4 = this.renderer.createText(this._el_1,'    \n    ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n    \n    ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_6 = new import13.ViewContainer(6,(null as any),this,this._anchor_6);
    this._TemplateRef_6_5 = new import16.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import15.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(parentRenderNode,'\n    \n    ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','btn-link','type','button'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n      ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'span',new import3.InlineArray2(2,'class','ngb-dp-navigation-chevron right'),(null as any));
    this._text_11 = this.renderer.createText(this._el_8,'\n    ',(null as any));
    this._text_12 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_8));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import17.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_6_0_0:any = this.context.showSelect;
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    const currVal_16:any = this.context.prevDisabled();
    if (import3.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementProperty(this._el_1,'disabled',currVal_16);
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this.context.nextDisabled();
    if (import3.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementProperty(this._el_8,'disabled',currVal_17);
      this._expr_17 = currVal_17;
    }
  }
  destroyInternal():void {
    this._vc_6.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 6)) { return new View_NgbDatepickerNavigation1(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>!!this.context.doNavigate(this.context.navigation.PREV)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>!!this.context.doNavigate(this.context.navigation.NEXT)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}`;

var expected = `
/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-i18n';
import * as import10 from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-calendar';
import * as import11 from '@ng-bootstrap/ng-bootstrap/datepicker/datepicker-navigation-select';
import * as import12 from './datepicker-navigation-select.ngfactory';
import * as import13 from '@angular/core/src/linker/view_container';
import * as import14 from '@angular/core/src/security';
import * as import15 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import16 from '@angular/core/src/linker/template_ref';
import * as import17 from '@angular/common/src/directives/ng_if';
export class Wrapper_NgbDatepickerNavigation {
  /*private*/ _eventHandler:Function;
  context:import0.NgbDatepickerNavigation;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  subscription0:any;
  subscription1:any;
  constructor(p0:any,p1:any) {
    this._changed = false;
    this.context = new import0.NgbDatepickerNavigation(p0,p1);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
    (this.subscription1 && this.subscription1.unsubscribe());
  }
  check_date(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.date = currValue;
      this._expr_0 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_1 = currValue;
    }
  }
  check_maxDate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.maxDate = currValue;
      this._expr_2 = currValue;
    }
  }
  check_minDate(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.minDate = currValue;
      this._expr_3 = currValue;
    }
  }
  check_months(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.months = currValue;
      this._expr_4 = currValue;
    }
  }
  check_showSelect(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.showSelect = currValue;
      this._expr_5 = currValue;
    }
  }
  check_showWeekNumbers(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_6,currValue))) {
      this._changed = true;
      this.context.showWeekNumbers = currValue;
      this._expr_6 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
    const currVal_7:boolean = !this.context.showSelect;
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      view.renderer.setElementClass(el,'collapsed',currVal_7);
      this._expr_7 = currVal_7;
    }
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean,emit1:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.navigate.subscribe(_eventHandler.bind(view,'navigate'))); }
    if (emit1) { (this.subscription1 = this.context.select.subscribe(_eventHandler.bind(view,'select'))); }
  }
}
var renderType_NgbDatepickerNavigation_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_NgbDatepickerNavigation_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.NgbDatepickerNavigation>;
  _NgbDatepickerNavigation_0_3:Wrapper_NgbDatepickerNavigation;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NgbDatepickerNavigation_Host0,renderType_NgbDatepickerNavigation_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'ngb-datepicker-navigation',new import3.InlineArray2(2,'class','d-flex justify-content-between'),rootSelector,(null as any));
    this.compView_0 = new View_NgbDatepickerNavigation0(this.viewUtils,this,0,this._el_0);
    this._NgbDatepickerNavigation_0_3 = new Wrapper_NgbDatepickerNavigation(this.injectorGet(import9.NgbDatepickerI18n,this.parentIndex),this.injectorGet(import10.NgbCalendar,this.parentIndex));
    this.compView_0.create(this._NgbDatepickerNavigation_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._NgbDatepickerNavigation_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.NgbDatepickerNavigation) && (0 === requestNodeIndex))) { return this._NgbDatepickerNavigation_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._NgbDatepickerNavigation_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgbDatepickerNavigation_0_3.checkHost(this,this.compView_0,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._NgbDatepickerNavigation_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const NgbDatepickerNavigationNgFactory:import8.ComponentFactory<import0.NgbDatepickerNavigation> = new import8.ComponentFactory<import0.NgbDatepickerNavigation>('ngb-datepicker-navigation',View_NgbDatepickerNavigation_Host0,import0.NgbDatepickerNavigation);
const styles_NgbDatepickerNavigation:any[] = ['[_nghost-%COMP%]{height:2rem;line-height:1.85rem}.collapsed[_nghost-%COMP%]{margin-bottom:-2rem}.ngb-dp-navigation-chevron[_ngcontent-%COMP%]::before{border-style:solid;border-width:.2em .2em 0 0;content:"";display:inline-block;height:.75em;transform:rotate(-135deg);-webkit-transform:rotate(-135deg);-ms-transform:rotate(-135deg);width:.75em;margin:0 0 0 .5rem}.ngb-dp-navigation-chevron.right[_ngcontent-%COMP%]:before{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin:0 .5rem 0 0}.btn-link[_ngcontent-%COMP%]{cursor:pointer;outline:0}.btn-link[disabled][_ngcontent-%COMP%]{cursor:not-allowed;opacity:.65}'];
class View_NgbDatepickerNavigation1 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import11.NgbDatepickerNavigationSelect>;
  _NgbDatepickerNavigationSelect_0_3:import12.Wrapper_NgbDatepickerNavigationSelect;
  _text_1:any;
  /*private*/ _expr_4:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import13.ViewContainer) {
    super(View_NgbDatepickerNavigation1,renderType_NgbDatepickerNavigation,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_4 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'ngb-datepicker-navigation-select',new import3.InlineArray2(2,'class','d-block'),(null as any));
    this.compView_0 = new import12.View_NgbDatepickerNavigationSelect0(this.viewUtils,this,0,this._el_0);
    this._NgbDatepickerNavigationSelect_0_3 = new import12.Wrapper_NgbDatepickerNavigationSelect(this.parentView.injectorGet(import9.NgbDatepickerI18n,this.parentIndex),this.parentView.injectorGet(import10.NgbCalendar,this.parentIndex));
    this._text_1 = this.renderer.createText((null as any),'\n    ',(null as any));
    this.compView_0.create(this._NgbDatepickerNavigationSelect_0_3.context);
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'select',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgbDatepickerNavigationSelect_0_3.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.NgbDatepickerNavigationSelect) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) { return this._NgbDatepickerNavigationSelect_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.parentView.context.date;
    this._NgbDatepickerNavigationSelect_0_3.check_date(currVal_0_0_0,throwOnChange,false);
    const currVal_0_0_1:any = this.parentView.context.disabled;
    this._NgbDatepickerNavigationSelect_0_3.check_disabled(currVal_0_0_1,throwOnChange,false);
    const currVal_0_0_2:any = this.parentView.context.maxDate;
    this._NgbDatepickerNavigationSelect_0_3.check_maxDate(currVal_0_0_2,throwOnChange,false);
    const currVal_0_0_3:any = this.parentView.context.minDate;
    this._NgbDatepickerNavigationSelect_0_3.check_minDate(currVal_0_0_3,throwOnChange,false);
    this._NgbDatepickerNavigationSelect_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_4:any = (this.parentView.context.months * 9);
    if (import3.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementStyle(this._el_0,'width',((this.viewUtils.sanitizer.sanitize(import14.SecurityContext.STYLE,currVal_4) == null)? (null as any): (this.viewUtils.sanitizer.sanitize(import14.SecurityContext.STYLE,currVal_4).toString() + 'rem')));
      this._expr_4 = currVal_4;
    }
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._NgbDatepickerNavigationSelect_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'select')) {
      const pd_sub_0:any = ((<any>this.parentView.context.selectDate($event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_NgbDatepickerNavigation:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_NgbDatepickerNavigation,{});
export class View_NgbDatepickerNavigation0 extends import2.AppView<import0.NgbDatepickerNavigation> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _el_3:any;
  _text_4:any;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _vc_6:import13.ViewContainer;
  _TemplateRef_6_5:any;
  _NgIf_6_6:import15.Wrapper_NgIf;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _text_11:any;
  _text_12:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NgbDatepickerNavigation0,renderType_NgbDatepickerNavigation,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_16 = import1.UNINITIALIZED;
    this._expr_17 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','btn-link','type','button'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._el_3 = import3.createRenderElement(this.renderer,this._el_1,'span',new import3.InlineArray2(2,'class','ngb-dp-navigation-chevron'),(null as any));
    this._text_4 = this.renderer.createText(this._el_1,'    \n    ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n    \n    ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_6 = new import13.ViewContainer(6,(null as any),this,this._anchor_6);
    this._TemplateRef_6_5 = new import16.TemplateRef_(this,6,this._anchor_6);
    this._NgIf_6_6 = new import15.Wrapper_NgIf(this._vc_6.vcRef,this._TemplateRef_6_5);
    this._text_7 = this.renderer.createText(parentRenderNode,'\n    \n    ',(null as any));
    this._el_8 = import3.createRenderElement(this.renderer,parentRenderNode,'button',new import3.InlineArray4(4,'class','btn-link','type','button'),(null as any));
    this._text_9 = this.renderer.createText(this._el_8,'\n      ',(null as any));
    this._el_10 = import3.createRenderElement(this.renderer,this._el_8,'span',new import3.InlineArray2(2,'class','ngb-dp-navigation-chevron right'),(null as any));
    this._text_11 = this.renderer.createText(this._el_8,'\n    ',(null as any));
    this._text_12 = this.renderer.createText(parentRenderNode,'\n  ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_1,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_1));
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_8,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_8));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._el_3,
      this._text_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12
    ]
    ),[
      disposable_0,
      disposable_1
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import16.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import17.NgIf) && (6 === requestNodeIndex))) { return this._NgIf_6_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_6_0_0:any = this.context.showSelect;
    this._NgIf_6_6.check_ngIf(currVal_6_0_0,throwOnChange,false);
    this._NgIf_6_6.ngDoCheck(this,this._anchor_6,throwOnChange);
    this._vc_6.detectChangesInNestedViews(throwOnChange);
    const currVal_16:any = this.context.prevDisabled();
    if (import3.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementProperty(this._el_1,'disabled',currVal_16);
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this.context.nextDisabled();
    if (import3.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementProperty(this._el_8,'disabled',currVal_17);
      this._expr_17 = currVal_17;
    }
  }
  destroyInternal():void {
    this._vc_6.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 6)) { return new View_NgbDatepickerNavigation1(this.viewUtils,this,6,this._anchor_6,this._vc_6); }
    return (null as any);
  }
  handleEvent_1(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>!!this.context.doNavigate(this.context.navigation.PREV)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_8(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>!!this.context.doNavigate(this.context.navigation.NEXT)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}`;

module.exports = { actual, expected };
